server:
  port: 8083

product:
  service:
    url: http://localhost:8082/api/products

spring:
  application:
    name: customer-service

  datasource:
    url: jdbc:mysql://localhost:3306/customerdb
    username: root
    password: root
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  mail:
    host: smtp.gmail.com
    port: 587
    username: swathi.medisetti3@gmail.com
    password: lyznkrgnrbjcijgs
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    cache: false

kafka:
  topic:
    name: demo-topic
  queue:
    name: demo-queue
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: customer-group

resilience4j:
  circuitbreaker:
    instances:
      productService:
        registerHealthIndicator: true
        slidingWindowSize: 5
        minimumNumberOfCalls: 3
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 2
        automaticTransitionFromOpenToHalfOpenEnabled: true
        eventConsumerBufferSize: 10

  retry:
    instances:
      productService:
        maxAttempts: 3
        waitDuration: 2s
        retryExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.io.IOException
        ignoreExceptions:
          - java.lang.IllegalArgumentException

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html


eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

management:
  endpoints:
    web:
      exposure:
        include: "*"

logging:
  level:
    root: INFO
    com.example.customer_service: DEBUG

customer:
  message: Welcome from customer-service config!
customer:
  messages:
    created: Customer created successfully
    fetched: Customers fetched successfully
    updated: Customer updated successfully
    deleted: Customer deleted successfully
    partially-updated: Customer partially updated successfully
    not-found: Customer not found
    products-fallback: Product service is currently unavailable. Please try again later.
    created-template: Customer "%s" has been created successfully.
    updated-template: Customer "%s" has been updated.
    patched-template: Customer "%s" has been partially updated.
    deleted-template: Customer "%s" has been deleted.

